import numpy as np
import matplotlib.pyplot as plt
import pandas as pd


#The Plotter class will plot the metrics generated by the Evaluator class on all
#specified missing data fractions. The class requires an array containing the
#missing data fractions and an array containing the average IC-scores (or other scores?)
#for each missing data fraction.
class Plotter:
    def __init__(self):
        self.frac_of_miss_array = [10,10,20,20,30,30,40,40,50,50,60,60,70,70,80,80,90,90,100,100]
        self.performance_array =[12,16,24,26,37,39,49,53,61,64,73,75,85,87,92,94,95,97,98,99]
        #Gives reversed list, instead of exisiting data you will get missing data
        self.reversed_peformance = self.performance_array[::-1]

    def scatterplotaverageperformance(self):
        #Create pandas dataframe with missing array data and reversed performance
        df = pd.DataFrame({'frac_of_miss': self.frac_of_miss_array, 'performance': self.reversed_peformance})
        #Make dataframe float for mean grouping
        df = df.astype(float)
        #Groupby for lineplot
        mean = df.groupby('frac_of_miss')['performance'].mean()
        mean.index = np.arange(1, len(mean) + 1)
        #Get the boxplot frame
        _, ax = plt.subplots()
        #Plot the mean
        mean.plot(ax=ax)
        #Plot boxplot
        df.boxplot(showfliers= False, ax=ax, column='performance', by='frac_of_miss')
        #Give y-axis name
        plt.ylabel('Performance')
        plt.show()


p1 = Plotter()
p1.scatterplotaverageperformance()
